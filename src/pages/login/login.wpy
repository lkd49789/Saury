<style lang="less">
  .body {
    height: 100%;
    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 10;
    >image {
      height: 100%;
      width: 100%;
    }
    >view {
      position: absolute;
    }
    .logo-container {
      margin-top: -50rpx;
      margin-bottom: 80rpx;
      .bc-gd {
        width: 176rpx;
        height: 176rpx;
        background: #fff;
        border-radius: 20rpx;
        box-shadow: 0px 8px 30px rgba(0, 0, 0, 0.35);
        position: relative;
        margin: 0 auto;
        .logo {
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
        }
      }
    }
    .login-box {
      // margin: 0 68rpx 120rpx 68rpx;
      padding: 30rpx 64rpx 64rpx;
      box-shadow: 0px 8px 30px rgba(0, 0, 0, 0.35);
      border-radius: 20rpx;
      background: #fff;
      width: 488rpx;
      margin: auto;
      .domain {
        margin-top: 43rpx;
      }
      .username {
        height: 100rpx;
      }
      .password,.username {
        margin-top: 70rpx;
      }
      .hint {
        height: 50rpx;
        font-size: 26rpx;
        color: #e20000;
        flex-direction: row;
        width: 100%;
        .text-logo {
          height: 60rpx;
          width: 198rpx;
        }
      }
      .login-bottom {
        display: flex;
        width: 100%;
        flex-direction: row;
        justify-content: space-between;
        font-size: 28rpx;
        align-items: center;
        position: relative;
        .forgate {
          width: 100%;
          >text {
            float: right;
          }
        }
        .btn-register {
          height: 86rpx;
          width: 350rpx;
          position: absolute;
          left: 50%;
          transform: translate(-50%, -50%);
          margin-top: 125rpx;
          background: #5d73fa;
          box-shadow: 0px 8px 30px rgba(65, 98, 213, 0.25);
          line-height: 86rpx;
          border-radius: 20px;
        }
        .btn-text {
          color: #fff;
          width: 100%;
          display: inline-block;
          text-align: center;
        }
      }
      .input {
        border-bottom: 1px solid #bfbfbf;
        padding-bottom: 36rpx;
        color: #2a2a2a;
      }
      .color {
        color: #b2b2b2;
        font-size: 28rpx;
      }
    }
  } //更改input占位符的颜色
  .third {
    width: 100%;
    height: 100%;
    position: relative;
  }
  .border-left,.border-right {
    border-top: 1px solid #dedede;
    width: 35%;
  }
  .border-right {
    float: right;
  }
  .text-hint {
    font-size: 28rpx;
    color: #b2b2b2;
    display: inline-block; // background: rgba(alpha);
    padding: 0 20rpx;
    position: absolute;
    top: 0;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  .thrid-logo {
    margin-top: 44rpx;
    height: 100%;
    display: flex;
    flex-direction: row;
    align-items: center;
  }
  .icon-logo {
    margin: 0 auto;
  }
  .QQ,
  .wechat,
  .weibo,
  .twiter {
    height: 90rpx;
    width: 90rpx;
  }
</style>

<template>
  <view class="body" style="">
    <image src="{{loginImage}}" mode="scaleToFill" lazy-load="true">
    </image>
    <view>
      <view class="logo-container">
        <view class="bc-gd">
          <icon class="logo iconfont icon-ailogo" style="font-size:118rpx; color:#5d73fa"></icon>
        </view>
      </view>
      <view class="login-box">
        <form bindsubmit="formSubmit" bindreset="formReset">
          <!-- <view class="login-top"> -->
          <!-- <image class="text-logo" src="../../images/text-logo.png"></image> -->
          <view class="domain">
            <input class="input" placeholder="律所标识" placeholder-class="color" type="text" name="domain" value=""></input>
          </view>
          <view class="username">
            <input class="input" placeholder="用户名或邮箱地址" placeholder-class="color" type="text" name="username" value=""></input>
          </view>
          <view class="password">
            <input class="input" placeholder="密码" placeholder-class="color" type="password" name="password" value=""></input>
          </view>
          <!-- </view> -->
          <view class="hint">
            <text class="hint-msg" wx:if="{{err}}">您输入的密码有误!</text>
          </view>
          <view class="login-bottom">
            <view class="forgate">
              <text style="color:#5d73fa" @tap="toforgate">忘记密码？</text>
            </view>
            <button formType="submit" class="btn-register btn-text">登录</button>
          </view>
        </form>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import { IsTenantAvailable, Authenticate } from '@/api/login.js';
  export default class login extends wepy.page {
    config = {
      backgroundTextStyle: 'dark',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: '律智荟',
      navigationBarTextStyle: 'black'
    };
    // mixins = [TestMixin ];
    data = {
      loginImage: '../../images/login.jpg',
      err: false,
      token: 0,
      openId: '',
      unionId: ''
    };
    methods = {
      toforgate() {
        wepy.navigateTo({
          url: '../login/forgetPassword'
        });
      },
      async formSubmit(e) {
        try{
          if(!e.detail.value.domain){
            throw '请输入律所标识'
          }else if(!e.detail.value.username){
            throw '请输入账号'
          }else if(!e.detail.value.password){
            throw '请输入密码'
          }
          let { data } = await IsTenantAvailable({ 'tenancyName':e.detail.value.domain })           
          if(data.result.state === 1){
            let resData  = await Authenticate({ 
                'Abp.TenantId':data.result.tenantId
              },
              {
                userNameOrEmailAddress: e.detail.value.username,
                password: e.detail.value.password
              }) 
            if (this.openId && this.unionId) {
              await this.AddWechatUserLogin(resData.data.result.accessToken)
            }else {
              this.storage(resData.data.result.accessToken)
            }
          }else{
            let content = (data.result.state == 2 ) ? '未激活' : '不存在'
            wx.showModal({
              title: '警告',
              content
            })
          }
        }catch(err){
          wx.showToast({
            title: err,
            icon: 'none',
            duration: 3000
          })
        }
      }
    };
    // onShow() {
    //   wx.hideTabBar({
    //     animation: false //是否需要过渡动画
    //   });
    // }
    storage(accessToken) {
      try {
        wx.setStorageSync('access', accessToken)
      } catch (err) {
        console.log(err);
      }
      wx.switchTab({
        url: '../main/index'
      })
    }
    async AddWechatUserLogin(accessToken) {
      let { data } = await WechatUserLogin({
        openId: this.openId,
        unionId: this.unionId,
        loginProvider: 'WechatMini',
      })
      if(!data.success){
        wx.showModal({
            title: '警告',
            content: data.error.message,
            showCancel: true,
            confirmText: '确定',
            success: res=> {
              if (res.confirm) {
                  this.storage(accessToken);
              }
            }
        })
      }

    }
    onLoad(options) {
      if (Object.keys(options).length !== 0) {
        this.openId = options.openId;
        this.unionId = options.unionId;
      }
      this.$apply();
    }
  }
</script>
