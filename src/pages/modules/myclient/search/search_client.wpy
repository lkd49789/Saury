<!--  -->
<style lang='less'>
    .container {
        margin: 44rpx 28rpx;
        .keyword-search {
            .search_top {
                display: flex;
                align-items: center;
                justify-content: space-between;
                .search_input {
                    width: 100%; // border:1px solid #dfdfdf;
                    padding: 10rpx 20rpx;
                    border-radius: 100rpx;
                    background: #f4f4f4;
                    display: flex;
                    align-items: center;
                    margin-right: 14rpx;
                    >icon {
                        margin-right: 14rpx;
                    }
                    >input {
                        width: 100%;
                    }
                }
                .top_right_btn {
                    // width: 15%;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                }
            }
            .search_history {
                margin-top: 28rpx;
                .history_title {
                    display: flex;
                    align-items: center;
                    justify-content: space-between;
                }
                .history_content {
                    margin-top: 10rpx;
                    display: flex;
                    align-items: center;
                    flex-wrap: wrap;
                    >view {
                        background: #f4f4f4;
                        padding: 10rpx 20rpx;
                        border-radius: 50rpx;
                        color: #7a7a7a;
                        margin: 14rpx;
                        position: relative;
                        >icon {
                            // animation: item_delet_icon 1s linear;
                            position: absolute;
                            top: -30rpx;
                            right: -10rpx;
                        }
                    }
                }
            } // @keyframes item_delet_icon {
            //     from {
            //         opacity: 0;
            //     }
            //     to {
            //         opacity: 1;
            //     }
            // }
        }
        .advanced-search-input-panel {
            .advanced-search-title {
                display: flex;
                justify-content: space-between;
                align-items: baseline;
                >text {
                    font-size: 40rpx;
                }
            }
            .advanced-search-content {
                margin: 30rpx 0;
            }
        }
        .tui-picker-content {
            margin-bottom: 36rpx;
            picker {
                padding: 20rpx 0;
                border-bottom: 1px solid #dfdfdf;
                .tui-picker-detail {
                    display: flex;
                    align-items: center;
                    justify-content: space-between;
                    color: #7a7a7a;
                }
            }
        }
        .btn-sub {
            width: 160rpx;
            height: 160rpx;
            position: fixed;
            bottom: 0;
            right: 0;
            z-index: 99;
        }
    }
</style>

<template>
    <view class='container'>
        <view class="keyword-search" wx:if="{{showPage}}">
            <view class="search_top">
                <view class="search_input">
                    <icon class="iconfont icon-sousuo1 input_sousuo" style="color:#5d73fa;font-size:24px;"></icon>
                    <input value="{{searchClentValue}}" type="text" confirm-type="search" placeholder="客户名称" placeholder-class="placeholder" maxlength="30" bindconfirm="submitSearch" focus="true">
                    </input>
                </view>
                <view class="top_right_btn">
                    <icon class="iconfont icon-gaojisousuo" style="color:#5d73fa;font-size:35px;" @tap="showPage"></icon>
                </view>
            </view>
            <view class="search_history">
                <view class="history_title">
                    <text>历史搜索</text>
                    <icon class="iconfont icon-shanchu2" style="color:#7a7a7a;font-size:35rpx;" catchtap="deletItemAll" wx:if="{{history_keyWord_client.length!==0}}"></icon>
                </view>
                <view class="history_content">
                    <repeat for="{{history_keyWord_client}}" key="index" index="index" item="item">
                        <view @tap="history('{{item}}')" bindlongpress="longTap('{{index}}')">
                            <text>{{item}}</text>
                            <icon class="iconfont icon-zirenwushanchu" style="color:#dfdfdf;font-size:30rpx;" wx:if="{{isShowArray[index]}}" catchtap="deletItem('{{index}}')"></icon>
                        </view>
                    </repeat>
                </view>
            </view>
        </view>
        <view class="advanced-search-input-panel" wx:else="{{showPage}}">
            <view class="advanced-search-title">
                <text>高级搜索</text>
                <icon class="iconfont icon-zirenwushanchu" style="color:#7a7a7a;font-size:40rpx;" @tap="showPage"></icon>
            </view>
            <view class="advanced-search-content">
                <view class="tui-picker-content">
                    <view>开始时间</view>
                    <picker mode="date" value="{{startDate}}" start="2000-01-01" end="2050-12-31" bindchange="bindDateChangeStart">
                        <view class="tui-picker-detail">
                            {{startDate||'请选择'}}
                            <icon class="updown iconfont icon-gengduoneirongdianjichakanxiangqing" style="font-size:30rpx;color:#b2b2b2"></icon>
                        </view>
                    </picker>
                </view>
                <view class="tui-picker-content">
                    <view>结束时间</view>
                    <picker mode="date" value="{{endDate}}" start="2000-01-01" end="2050-12-31" bindchange="bindDateChangeEnd">
                        <view class="tui-picker-detail">
                            {{endDate||'请选择'}}
                            <icon class="updown iconfont icon-gengduoneirongdianjichakanxiangqing" style="font-size:30rpx;color:#b2b2b2"></icon>
                        </view>
                    </picker>
                </view>
                <Name :input.sync="Name" :inputValue.sync='NameValue' :twoWayTitle="NameValue" />
                <Id :input.sync="Id" :inputValue.sync='IdValue' :twoWayTitle="IdValue" />
                <OrganizationUnitId :options.sync="OrganizationUnitId" :index.sync='OrganizationUnitIdIndex' :twoWayTitle="OrganizationUnitIdIndex" />
                <ImportLevel :options.sync="ImportLevel" :index.sync='ImportLevelIndex' :twoWayTitle="ImportLevelIndex" />
                <Origin :options.sync="Origin" :index.sync='OriginIndex' :twoWayTitle="OriginIndex" />
                <ClientType :options.sync="ClientType" :index.sync='ClientTypeIndex' :twoWayTitle="ClientTypeIndex" />
                <view class="tui-picker-content">
                    <view>地区</view>
                    <!-- <picker mode="region" value="{{region}}" bindchange="changePickerData" name="region" bindcolumnchange="changePickerDataColumn" custom-item="{{customItem}}">
                        <view class="tui-picker-detail">
                            {{region.length!==0?region[0]+'/'+region[1]+'/'+region[2]:'请选择'}}
                            <icon class="updown iconfont icon-gengduoneirongdianjichakanxiangqing" style="font-size:30rpx;color:#b2b2b2"></icon>
                        </view>
                    </picker> -->
                    <picker mode="multiSelector" @change="bindMultiPickerChange" @columnchange="bindMultiPickerColumnChange" value="{{region}}" range="{{multiArray}}">
                        <view class="tui-picker-detail">
                            {{regionText || '请选择'}}
                            <icon class="updown iconfont icon-gengduoneirongdianjichakanxiangqing" style="font-size:30rpx;color:#b2b2b2"></icon>
                        </view>
                    </picker>
                </view>
                <view class="tui-picker-content">
                    <view>业务类型</view>
                    <picker mode="multiSelector" value="{{CategoryIndex}}" @tap="getData('Category')" @change="change('Category')" bindcolumnchange="bindMultiPickerColumnChangeCategory" range="{{Category}}" range-key="name">
                        <view class="tui-picker-detail">
                            {{getCategoryArr.length!==0?getCategoryArr:'请选择'}}
                            <icon class="updown iconfont icon-gengduoneirongdianjichakanxiangqing" style="font-size:30rpx;color:#b2b2b2"></icon>
                        </view>
                    </picker>
                </view>
                <view class="tui-picker-content">
                    <view>客户行业</view>
                    <picker mode="multiSelector" value="{{IndustryTypeIndex}}" @tap="getData('IndustryType')" @change="change('IndustryType')" bindcolumnchange="bindMultiPickerColumnChangeCategory2" range="{{IndustryType}}" range-key="name">
                        <view class="tui-picker-detail">
                            {{getTradeArr.length!==0?getTradeArr:'请选择'}}
                            <icon class="updown iconfont icon-gengduoneirongdianjichakanxiangqing" style="font-size:30rpx;color:#b2b2b2"></icon>
                        </view>
                    </picker>
                </view>
                <image class="btn-sub" src="../../../../images/test.png" mode="scaleToFill" lazy-load="false" catchtap="advancedSearchSubmit" />
            </view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import {
        myDistinct
    } from '@/utils/cofig/api.js';
    import ajax from '@/utils/cofig/ajax.js';
    import {
        formatDate
    } from '@/utils/cofig/api.js';
    import Name from '@/components/picker/input';
    import Id from '@/components/picker/input';
    import OrganizationUnitId from '@/components/picker/option';
    import ImportLevel from '@/components/picker/option';
    import Origin from '@/components/picker/option';
    import ClientType from '@/components/picker/option';
    export default class searchClient extends wepy.page {
        components = {
            Name,
            Id,
            OrganizationUnitId,
            ImportLevel,
            Origin,
            ClientType
        };
        data = {
            region:[0,0,0,0],
            regionText:'',
            id:1,
            multiArray: [],
            multiArrayId:[],
            searchData: {
                Category: "",
                ClientType: "",
                CreationTime: {StartDate: '', EndDate: ''},
                Id: "",
                ImportLevel: "",
                IndustryType: "",
                IsAll: true,
                KeyWord: "",
                Name: "",
                OrganizationUnitId: "",
                Origin: "",
                Region: "",
                pageNumber: 1,
                pageSize: 10,
                sorting: ""
            },
            showPage: true,
            history_keyWord_client: [],
            searchClentValue: '',
            isShowArray: [],
            startDate: '',
            endDate: '',
            Name: {
                title: '客户名称',
                name: 'Name',
                warning: false,
                type: 'text',
            },
            NameValue: '',
            Id: {
                title: '客户编号',
                name: 'Id',
                warning: false,
                type: 'text',
            },
            IdValue: '',
            OrganizationUnitId: {
                title: '组织结构',
                name: 'OrganizationUnitId',
                value: [],
                displayText: [],
                warning: false
            },
            OrganizationUnitIdIndex: -1,
            ImportLevel: {
                title: '重要级别',
                name: 'ImportLevel',
                value: [],
                displayText: [],
                warning: false
            },
            ImportLevelIndex: -1,
            Origin: {
                title: '客户来源',
                name: 'Origin',
                value: [],
                displayText: [],
                warning: false
            },
            OriginIndex: -1,
            ClientType: {
                title: '客户类型',
                name: 'ClientType',
                value: [],
                displayText: [],
                warning: false
            },
            ClientTypeIndex: -1,
            // Category: [],
            // CategoryData: [],
            // IndustryType: [],
            pickerData: '',
            region: [],
            customItem: '',
            //业务类型
            getCategoryArr: [],
            Category: [
                [],
                [],
                []
            ],
            CategoryIndex: [0, 0, 0],
            CategoryTrue: true,
            getTradeArr: [],
            IndustryType: [
                [],
                [],
                [],
                []
            ],
            IndustryTypeIndex: [0, 0, 0, 0],
            tradeTrue: true,
        };
        methods = {
            bindMultiPickerChange (e) {
                let one = this.multiArray[0][this.region[0]]     
                let two = this.multiArray[1].length > 0 ? '/'+ this.multiArray[1][this.region[1]] : ''
                let three = this.multiArray[2].length > 0 ? '/'+ this.multiArray[2][this.region[2]] : ''
                let five = this.multiArray[3].length > 0 ? '/'+ this.multiArray[3][this.region[3]] : '';
                this.regionText = one + two + three + five
                for(let i = this.multiArray.length - 1;i >= 0;i--){
                    if(this.multiArray[i].length > 0){
                        this.searchData.Region = this.multiArrayId[i][this.region[i]]
                        break;
                    }
                }
            },
            bindMultiPickerColumnChange(e){
                console.log('修改的列为', e.detail.column, '，值为', e.detail.value);
                if(e.detail.column < 3){
                    this.num = e.detail.column + 2
                    this.getRegion(e.detail.column + 2,this.multiArrayId[e.detail.column][e.detail.value])
                    this.region[e.detail.column] = e.detail.value;
                }
            },
            getData(type) {
                if (type == "Category") {
                    this.Category = [
                        [],
                        [],
                        []
                    ]
                    this.$apply()
                    this.GetGeneralCodeComboOutput('CLKL', 0, '');
                    this.CategoryTrue = false
                } else if (type == "IndustryType") {
                    this.IndustryType = [
                        [],
                        [],
                        [],
                        []
                    ]
                    this.$apply()
                    this.GetGeneralCodeComboOutput('CLIDT', 0, '');
                    this.tradeTrue = false
                }
            },
            change(type) {
                if (type == "Category") {
                    if (this.Category[1].length == 0) {
                        this.getCategoryArr = this.Category[0][this.CategoryIndex[0]].name;
                        this.searchData.Category = this.Category[0][this.CategoryIndex[0]].id;
                    } else if (this.Category[2].length == 0) {
                        this.getCategoryArr = this.Category[0][this.CategoryIndex[0]].name + '/' + this.Category[1][this.CategoryIndex[1]].name;
                        this.searchData.Category = this.Category[1][this.CategoryIndex[1]].id;
                    } else {
                        this.getCategoryArr = this.Category[0][this.CategoryIndex[0]].name + '/' + this.Category[1][this.CategoryIndex[1]].name + '/' + this.Category[2][this.CategoryIndex[2]].name;
                        this.searchData.Category = this.Category[2][this.CategoryIndex[2]].id;
                    }
                } else if (type == "IndustryType") {
                    if (this.IndustryType[1].length == 0) {
                        this.getTradeArr = this.IndustryType[0][this.IndustryTypeIndex[0]].name;
                        this.searchData.IndustryType = this.IndustryType[0][this.IndustryTypeIndex[0]].id;
                    } else if (this.IndustryType[2].length == 0) {
                        this.getTradeArr = this.IndustryType[0][this.IndustryTypeIndex[0]].name + '/' + this.IndustryType[1][this.IndustryTypeIndex[1]].name
                        this.searchData.IndustryType = this.IndustryType[1][this.IndustryTypeIndex[1]].id;
                    } else if (this.IndustryType[3].length == 0) {
                        this.getTradeArr = this.IndustryType[0][this.IndustryTypeIndex[0]].name + '/' + this.IndustryType[1][this.IndustryTypeIndex[1]].name + '/' + this.IndustryType[2][this.IndustryTypeIndex[2]].name;
                        this.searchData.IndustryType = this.IndustryType[2][this.IndustryTypeIndex[2]].id;
                    } else {
                        this.getTradeArr = this.IndustryType[0][this.IndustryTypeIndex[0]].name + '/' + this.IndustryType[1][this.IndustryTypeIndex[1]].name + '/' + this.IndustryType[3][this.IndustryTypeIndex[3]].name + '/' + this.IndustryType[3][this.IndustryTypeIndex[3]].name;
                        this.searchData.IndustryType = this.IndustryType[3][this.IndustryTypeIndex[3]].id;
                    }
                }
                this.$apply();
            },
            bindMultiPickerColumnChangeCategory(e) {
                console.log(e);
                switch (e.detail.column) {
                    case 0:
                        this.Category[1] = []
                        this.Category[2] = []
                        this.GetGeneralCodeComboOutput("CLKL", 1, this.Category[0][e.detail.value].id);
                        this.CategoryIndex[0] = e.detail.value
                        this.CategoryIndex[1] = 0
                        this.CategoryIndex[2] = 0
                        break;
                    case 1:
                        this.Category[2] = []
                        this.GetGeneralCodeComboOutput("CLKL", 2, this.Category[1][e.detail.value].id);
                        this.CategoryIndex[1] = e.detail.value
                        this.CategoryIndex[2] = 0
                        break;
                    case 2:
                        this.CategoryIndex[2] = e.detail.value
                        break;
                }
                this.$apply()
            },
            bindMultiPickerColumnChangeCategory2(e) {
                switch (e.detail.column) {
                    case 0:
                        this.IndustryType[1] = []
                        this.IndustryType[2] = []
                        this.IndustryType[3] = []
                        this.GetGeneralCodeComboOutput("CLIDT", 1, this.IndustryType[0][e.detail.value].id);
                        this.IndustryTypeIndex[0] = e.detail.value
                        this.IndustryTypeIndex[1] = 0
                        this.IndustryTypeIndex[2] = 0
                        this.IndustryTypeIndex[3] = 0
                        break;
                    case 1:
                        this.IndustryType[2] = []
                        this.IndustryType[3] = []
                        this.GetGeneralCodeComboOutput("CLIDT", 2, this.IndustryType[1][e.detail.value].id);
                        this.IndustryTypeIndex[1] = e.detail.value
                        this.IndustryTypeIndex[2] = 0
                        this.IndustryTypeIndex[3] = 0
                        break;
                    case 2:
                        this.IndustryType[3] = []
                        this.GetGeneralCodeComboOutput("CLIDT", 3, this.IndustryType[2][e.detail.value].id);
                        this.IndustryTypeIndex[2] = e.detail.value
                        this.IndustryTypeIndex[3] = 0
                        break;
                    case 3:
                        this.IndustryTypeIndex[3] = e.detail.value
                    default:
                        break;
                }
                this.$apply();
            },
            changePickerData(e) {
                console.log(e);
                this.region = e.detail.value;
                this.searchData.Region = e.detail.postcode;
                this.$apply();
            },
            bindDateChangeStart(e) {
                if (this.searchData.CreationTime) {
                    this.searchData.CreationTime.startDate = e.detail.value;
                } else {
                    var CreationTime = {};
                    CreationTime.startDate = e.detail.value;
                    this.searchData.CreationTime = CreationTime;
                }
                this.startDate = e.detail.value;
                this.$apply();
            },
            bindDateChangeEnd(e) {
                if (this.searchData.CreationTime) {
                    this.searchData.CreationTime.endDate = e.detail.value;
                } else {
                    var CreationTime = {};
                    CreationTime.endDate = e.detail.value;
                    this.searchData.CreationTime = CreationTime;
                }
                this.endDate = e.detail.value;
                this.$apply();
            },
            showPage() {
                this.showPage = !this.showPage;
                this.$apply();
            },
            deletItemAll() {
                wx.showModal({
                    title: '确认是否删除！', //提示的标题,
                    content: '全部历史记录', //提示的内容,
                    showCancel: true, //是否显示取消按钮,
                    cancelText: '取消', //取消按钮的文字，默认为取消，最多 4 个字符,
                    cancelColor: '#7a7a7a', //取消按钮的文字颜色,
                    confirmText: '确定', //确定按钮的文字，默认为取消，最多 4 个字符,
                    confirmColor: '#5d73fa', //确定按钮的文字颜色,
                    success: res => {
                        if (res.confirm) {
                            this.history_keyWord_client = [];
                            var history = wx.getStorageSync('HISTORY_KEYWORD_CLIENT');
                            history = [];
                            wx.setStorageSync('HISTORY_KEYWORD_CLIENT', history);
                            this.$apply();
                        }
                    }
                });
            },
            deletItem(index) {
                this.history_keyWord_client.splice(index, 1);
                var history = wx.getStorageSync('HISTORY_KEYWORD_CLIENT');
                history.splice(index, 1);
                wx.setStorageSync('HISTORY_KEYWORD_CLIENT', history);
            },
            longTap(index) {
                this.isShowArray = this.isShowArray.map(item => {
                    item = false;
                    return item
                })
                this.isShowArray[index] = true;
                this.$apply();
            },
            history(item) {
                this.searchClentValue = item;
                this.$apply();
            },
            advancedSearchSubmit() {
                let resData = ajax.getData('/api/services/web/client/GetClients',
                    'post',
                    this.searchData)
                var pages = getCurrentPages();
                var prevPage = pages[pages.length - 2]; //上一个页面
                if (prevPage) {
                    prevPage.isRefresh(this.searchData);
                    wx.navigateBack({
                        delta: 1 //返回的页面数，如果 delta 大于现有页面数，则返回到首页,
                    });
                }

            },
            submitSearch(e) {
                var value = e.detail.value.replace(/(^\s*)|(\s*$)/g, "");
                if (value) {
                    var pages = getCurrentPages();
                    this.searchData.KeyWord = e.detail.value;
                    var prevPage = pages[pages.length - 2]; //上一个页面
                    if (prevPage) {
                        prevPage.isRefresh(this.searchData);
                        wx.navigateBack({
                            delta: 1, //返回的页面数，如果 delta 大于现有页面数，则返回到首页,
                            success: () => {
                                var History_KeyWord_Client = wx.getStorageSync('HISTORY_KEYWORD_CLIENT');
                                if (History_KeyWord_Client.length >= 20) {
                                    History_KeyWord_Client.splice(History_KeyWord_Client.length - 1, 1);
                                }
                                History_KeyWord_Client.unshift(value);
                                History_KeyWord_Client = myDistinct(History_KeyWord_Client);
                                wx.setStorageSync('HISTORY_KEYWORD_CLIENT', History_KeyWord_Client)
                            }
                        });
                    }
                    this.$apply();
                } else {
                    wx.showToast({
                        title: '搜索为空,请重试！', //提示的内容,
                        icon: 'none', //图标,
                        duration: 2000, //延迟时间,
                        mask: true, //显示透明蒙层，防止触摸穿透,
                        success: res => {}
                    });
                }
            }
        };
        events = {};
        watch = {
            NameValue(value) {
                this.searchData.Name = value;
                this.$apply();
            },
            IdValue(value) {
                this.searchData.Id = value;
                this.$apply();
            },
            ImportLevelIndex(index) {
                this.searchData.ImportLevel = this.ImportLevel.value[index];
                this.$apply();
            },
            OriginIndex(index) {
                this.searchData.Origin = this.Origin.value[index];
                this.$apply();
            },
            ClientTypeIndex(index) {
                this.searchData.ClientType = this.ClientType.value[index];
                this.$apply();
            },
        };
        computed = {};
        // 判断初始化历史数据
        isHistory() {
            var pages = getCurrentPages();
            var prevPage = pages[pages.length - 2]; //上一个页面
            prevPage.data.queryStream = {};
            prevPage.data.refresh = false;
            var History_KeyWord_Client = wx.getStorageSync('HISTORY_KEYWORD_CLIENT');
            if (!History_KeyWord_Client) {
                History_KeyWord_Client = [];
                wx.setStorageSync('HISTORY_KEYWORD_CLIENT', History_KeyWord_Client)
            } else {
                this.history_keyWord_client = History_KeyWord_Client;
                for (var index in this.history_keyWord_client) {
                    this.isShowArray[index] = false;
                }
            }
            this.$apply();
        }
        //获取业务类型
        async GetGeneralCodeComboOutput(keyWords, Depth, ParentId) {
            var data = {
                Class: keyWords,
                Depth: Depth,
                IsMaxDepth: true,
                ParentId: ParentId,
                IsRecursive: false,
                // isAll: true
            }
            var resData = await ajax.getData(
                '/api/services/web/common/GetGeneralCodeComboOutput',
                'post',
                data
            )
            // console.log(resData);
            // console.log(keyWords,Depth,ParentId);
            if (resData.statusCode == 200 && resData.data.result.length !== 0 && keyWords == "CLIDT") {
                for (let i = 0; i < resData.data.result.length; i++) {
                    this.IndustryType[Depth].push(resData.data.result[i])
                }
                if (Depth < 4) {
                    this.GetGeneralCodeComboOutput("CLIDT", Depth + 1, this.IndustryType[Depth][0].id)
                }
                this.$apply();
            }
            if (resData.statusCode == 200 && resData.data.result.length !== 0 && keyWords == "CLKL") {
                for (let i = 0; i < resData.data.result.length; i++) {
                    this.Category[Depth].push(resData.data.result[i])
                }
                console.log(Depth);
                // if (this.Category[Depth].length == 0) {
                //     this.Category[Depth].push({name:"无"})
                // }
                if (Depth < 2) {
                    this.GetGeneralCodeComboOutput("CLKL", Depth + 1, this.Category[Depth][0].id)
                }
                this.$apply();
            }
        }
        //检索条件信息
        async GetSearchForClients() {
            var resData = await ajax.getData(
                '/api/services/web/client/GetSearchForClients',
                'post'
            )
            if (resData.statusCode == 200) {
                var SearchForClients_data = resData.data.result;
                for (var index_Import in SearchForClients_data.importantLevelCombobox) {
                    this.ImportLevel.value[index_Import] = SearchForClients_data.importantLevelCombobox[index_Import].value;
                    this.ImportLevel.displayText[index_Import] = SearchForClients_data.importantLevelCombobox[index_Import].displayText;
                }
                for (var Origin_index in SearchForClients_data.customerOriginCombobox) {
                    this.Origin.value[Origin_index] = SearchForClients_data.customerOriginCombobox[Origin_index].value;
                    this.Origin.displayText[Origin_index] = SearchForClients_data.customerOriginCombobox[Origin_index].displayText;
                }
                for (var ClientType_index in SearchForClients_data.customerTypeCombobox) {
                    this.ClientType.value[ClientType_index] = SearchForClients_data.customerTypeCombobox[ClientType_index].value;
                    this.ClientType.displayText[ClientType_index] = SearchForClients_data.customerTypeCombobox[ClientType_index].displayText;
                }
                this.$apply();
            } else {
                wx.showLoading({
                    title: '网络故障，请检查！', //提示的内容,
                    mask: true, //显示透明蒙层，防止触摸穿透,
                    success: res => {}
                });
            }
        }
        /* 获取地区 */
        async getRegion(Depth = 1,ParentId = "100000"){
             var { data } = await ajax.getData(
                '/api/services/web/common/GetRegion',
                'post',
                {
                    Class: "region",
                    Depth,
                    IsMaxDepth: true,
                    IsRecursive: false,
                    ParentId
                }
            )
            if(data.result.length < 1){
                this.num = 5;
                for(let i = Depth - 1 ; i < 4;i++){
                    this.multiArray[i] = []
                }
            }else{
                this.multiArray[Depth - 1] = data.result.map(item => item.name)
                this.multiArrayId[Depth - 1] = data.result.map(item => item.id)
            }
            this.$apply()
            this.region[this.num - 1] = 0;
            this.num++
            if(this.num < 5){
                this.getRegion(this.num,this.multiArrayId[Depth - 1][0])
            }
        }
        /* 高级搜索 */
        // search
        onLoad() {
            this.isHistory();
            this.GetSearchForClients();
            // this.GetGeneralCodeComboOutput("CLKL",0,'');
            // this.GetGeneralCodeComboOutput("CLIDT",0,'');
            this.getRegion()
        };
        onShow() {
            this.num = 1;
        };
    }
</script>

