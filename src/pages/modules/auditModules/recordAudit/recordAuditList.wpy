<!--  -->
<style lang="less">
    .body {
        height: 100%;
        .top-title {
            height: 104rpx;
            line-height: 104rpx;
            font-size: 48rpx; // padding:0 56rpx 0  28rpx;
            border-bottom: 1px solid #dedede;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background: #fff;
            z-index: 9999;
            display: flex;
            justify-content: space-between;
            >text {
                margin-left: 28rpx;
            }
            >icon {
                margin-right: 28rpx;
            }
        }
        .main {
            margin: 149rpx 28rpx 0 28rpx;
            .item-content {
                margin: 44rpx 0;
                display: flex;
                flex-direction: column;
                box-shadow: 0px 8px 30px rgba(65, 98, 213, 0.25);
                border-radius: 20rpx;
                padding: 30rpx 28rpx;
                >view:not(:last-child):not(:first-child) {
                    margin-bottom: 20rpx;
                }
                >view:first-child {
                    margin-bottom: 36rpx;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    >view:first-child {
                        display: flex;
                        align-items: center;
                    }
                }
                .wait {
                    display: flex;
                    align-items: center;
                }
                .ready {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    >view {
                        display: flex;
                        align-items: center;
                    }
                }
            }
            .text-hidden {
                color: #7a7a7a;
                overflow: hidden;
                white-space: nowrap;
                text-overflow: ellipsis;
            }
        }
    }
</style>

<template>
    <view class="body">
        <view class="top-title">
            <text class="title">日志审核</text>
            <icon class="iconfont icon-sousuo" style="font-size:60rpx;color:#5d73fa" @tap="toSearchPage"></icon>
        </view>
        <view class='main'>
            <repeat for="{{ApprovalWorklogsData}}" key="index" index="index" item="item">
                <view class="item-content" @tap="toLogDetail('{{item.id}}')">
                    <view>
                        <view>
                            <icon class="iconfont icon-xiaotouxiang" style="font-size:50rpx;color:#5d73fa;margin-right:15rpx"></icon>
                            <text>{{item.employeeName||'未填写'}} </text>
                        </view>
                        <view style="color:#ff9900">
                            <text>{{item.selfDuration||'未填写'}}h</text>
                        </view>
                    </view>
                    <view class="text-hidden">
                        <text>{{item.description||'未填写'}}</text>
                    </view>
                    <view>
                        <text>{{item.startTime.Y}} {{item.startTime.M}}至{{item.endTime.Y}} {{item.endTime.M}}</text>
                    </view>
                </view>
            </repeat>
        </view>
        <placeHolderImage :placeHolder.sync="placeHolder" :twoWayTitle="placeHolder" />
    </view>
</template>

<script>
    import wepy from 'wepy';
    import ajax from '../../../../utils/cofig/ajax.js'
    import mixins from '../../../../utils/cofig/mixin.js';
    import navbar from '../../../../components/navbar';
    import placeHolderImage from '../../../../components/placeHolderImage';
    import {
        formatDate
    } from '../../../../utils/cofig/api.js';
    export default class recordAuditList extends wepy.page {
        config = {
            enablePullDownRefresh: true,
            backgroundTextStyle: 'dark',
            backgroundColorTop: '#f4f4f4',
            backgroundColorBottom: '#f4f4f4',
        };
        components = {
            placeHolderImage,
        };
        data = {
            queryStream: {},
            refresh: false,
            ApprovalWorklogsData: [],
            totalCount: 0,
            pageNumber: 1,
        };
        methods = {
            toSearchPage() {
                wx.navigateTo({
                    url: './search/searchRecordAudit'
                });
            },
            toLogDetail(id) {
                wx.navigateTo({
                    url: './logDetail?id=' + id 
                });
            }
        };
        watch={
            totalCount(count){
                if(count){
                    this.placeHolder.placeHolderShow = false;
                    this.$apply();
                }
            }
        }
        mixins = [mixins];
        // 下拉刷新
        onPullDownRefresh() {
            this.ApprovalWorklogsData = [];
            this.pageNumber = 1;
            this.queryStream={};
            this.GetWaitApprovalWorklogs();
            wx.hideNavigationBarLoading(); //完成停止加载
            wx.stopPullDownRefresh(); //停止下拉刷新
            this.$apply();
        }
        // 上拉加载
        onReachBottom() {
            if (this.totalCount / 10 > this.pageNumber && this.$parent.global.netWorkString) {
                this.pageNumber += 1;
                this.GetWaitApprovalWorklogs();
            } else {
                if (this.$parent.global.netWorkString) {
                    wx.showToast({
                        title: '我们是有底线的！',
                        icon: 'none',
                        duration: 1500,
                        mask: false,
                    });
                } else {
                    wx.showToast({
                        title: '网络连接失败！',
                        icon: 'none',
                        duration: 1500,
                        mask: false,
                    });
                }
            }
            this.$apply();
        }
        async GetWaitApprovalWorklogs() {
            var Category=this.queryStream.Category?this.queryStream.Category:'';
            var WorkType=this.queryStream.WorkType?this.queryStream.WorkType:'';
            var KeyWord=this.queryStream.KeyWord?this.queryStream.KeyWord:'';
            var CreationTime=this.queryStream.CreationTime
            var WorkTime=this.queryStream.WorkTime
            var data = {
                pageSize: 10,
                pageNumber: this.pageNumber,
                KeyWord,
                Category,
                WorkType,
                CreationTime,
                WorkTime
            }
            var resData = await ajax.getData(
                '/api/services/web/worklogApproval/GetWaitApprovalWorklogs',
                'post',
                data
            )
            switch (resData.statusCode) {
                case 200:
                    this.totalCount = resData.data.result.totalCount;
                    if (resData.data.result.items.length !== 0) {
                        var ApprovalWorklogsData = resData.data.result.items;
                        for (var index in ApprovalWorklogsData) {
                            ApprovalWorklogsData[index]['auditStatus'] = 'W';
                            // 日志时间
                            var sT = formatDate(ApprovalWorklogsData[index].startTime);
                            var eT = formatDate(ApprovalWorklogsData[index].endTime)
                            ApprovalWorklogsData[index].startTime = {
                                Y: sT[0] + '/' + sT[1] + '/' + sT[2],
                                M: sT[3] + ':' + sT[4]
                            }
                            ApprovalWorklogsData[index].endTime = {
                                Y: eT[0] + '/' + eT[1] + '/' + eT[2],
                                M: eT[3] + ':' + eT[4]
                            }
                            //自报时间
                            ApprovalWorklogsData[index].selfDuration = (ApprovalWorklogsData[index].selfDuration).toFixed(1);
                        }
                        this.ApprovalWorklogsData = this.ApprovalWorklogsData.concat(ApprovalWorklogsData)
                        var isRefresh = {
                            isRefresh: false
                        }
                        wx.setStorageSync('isRefresh', isRefresh);
                    } else {
                        this.placeHolder.placeHolderImageIndex = 0;
                        this.placeHolder.placeHolderShow = true;
                    }
                    this.$apply();
                    break;
                case 403:
                    console.log('您没有权限');
                    this.placeHolder.placeHolderImageIndex = 3;
                    this.placeHolder.placeHolderShow = true;
                    this.$apply();
                    break;
                case 500:
                    console.log('数据请求错误')
                    this.placeHolder.placeHolderImageIndex = 1;
                    this.placeHolder.placeHolderShow = true;
                    this.$apply();
                default:
                    break;
            }
            this.$apply()
        }
        onLoad() {
            this.GetWaitApprovalWorklogs();
        }
        isRefresh(){
            this.refresh=false;
            this.ApprovalWorklogsData = [];
            this.pageNumber = 1;
            this.GetWaitApprovalWorklogs();
            this.$apply();
        }
        onShow() {
            var pages = getCurrentPages();
            var prevPage = pages[pages.length - 1]; //上一个页面
            this.queryStream=prevPage.data.queryStream;
            this.refresh=prevPage.data.refresh
            var isRefresh = wx.getStorageSync('isRefresh');
            if(this.refresh||isRefresh.isRefresh){
                this.isRefresh();
            }

        }
    }
</script>