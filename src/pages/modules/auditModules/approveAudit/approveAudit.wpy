<!--  -->
<style lang="less">
    .body {
        height: 100%;
        .top-title {
            height: 104rpx;
            line-height: 104rpx;
            font-size: 48rpx;
            padding-left: 28rpx;
            border-bottom: 1px solid #dedede;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background: #fff;
            z-index: 99;
        }
        .main {
            margin: 149rpx 28rpx 0 28rpx;
            .checked{
                .radio{
                    display: flex;
                    flex-direction: column;
                    // align-items: center;
                    margin-bottom: 20rpx;
                    >view{
                        display: flex;
                        align-items: center;
                        >text{
                            margin-left:14rpx;
                        }
                    }
                }          
            }
        }
        .addImage{
            width: 160rpx;
            height: 160rpx;
            position: fixed;
            bottom: 0;
            right: 0;
            z-index: 9999;
        }
    }
</style>

<template>
    <view class="body">
        <view class="top-title">
            <text>文书审核</text>
        </view>
        <view class='main'>
            <view class="checked">
                <radio-group class="radio-group" @change="bindPickerChang" style="padding-bottom:20rpx;">
                    <label class="radio" wx:for="{{result}}" wx:key="index">
                        <view>
                            <radio value="{{item.condition + ',' + item.eventName}}" checked="{{item.isSelected}}" color="#5d73fa"/>
                        <text  style="margin-right:60rpx">{{item.displayName}}</text>
                        </view>
                    </label>
                </radio-group>
            </view>
            <remark :input.sync="remark" :inputValue.sync='remarkValue' :twoWayTitle="remarkValue" />
        </view>
        <image src="{{buttonImage}}" mode="scaleToFill" style="opacity:{{addOpacity}} ;" lazy-load="true" class="addImage" @touchstart="touchStart" @touchend="touchEnd"/>
    </view>
</template>
<script>
    import wepy from 'wepy';
    import { GAuditCaseFileStampActions,ProcessCaseFile } from '@/api/auditModules'
    import { GeneralCodeComboboxItems } from '@/api/common'
    import remark from '@/components/picker/input'
    export default class auditCase extends wepy.page {
        components = {
            remark
        };
        data = {
            buttonImage:'../../../../images/test.png',
            addOpacity:1,
            submitData:{data: {remark: ""}},
            result: [],
            remark:{
                title:'审核意见',
                name:'remark',
                warning:false,
                type:'text',
                options:true
            },
            remarkValue:''
        };
        watch = {
            remarkValue(value){
                this.submitData.data.remark = value;
                this.$apply();
            }
        }
        methods = {
            touchStart(){
                this.addOpacity=0.6;
                this.$apply();
            },
            touchEnd(){
                this.addOpacity=1;
                this.ProcessOrderItem();
                this.$apply();
            },
            bindPickerChang(e){
                this.submitData.condition  = e.detail.value.split(',')[0]
                this.submitData.eventName = e.detail.value.split(',')[1]
                // var value = e.detail.value;
                // this.submitData.status=value;
                // this.remark.warning=value=='A'?false:true;
                this.$apply();
            }
        };
        async ProcessOrderItem(){
            wx.showLoading({
                title: '提交中，请稍等！', //提示的内容,
                mask: true, //显示透明蒙层，防止触摸穿透,
                success:()=>{
                    this.$apply();
                }
            });
            var resData = await ProcessCaseFile(this.submitData)
            if(resData.statusCode == 200){
                var  isRefresh = wx.getStorageSync('isRefresh');
                isRefresh.isRefresh = true;
                wx.setStorageSync('isRefresh', isRefresh);
                wx.navigateBack({
                    delta: 2
                });
            }else{
                wx.showToast({
                    title: resData.data.error.message,
                    icon: 'none',
                    duration: 1500,
                    mask: false,
                });
            }
        }
        async GetGeneralCodeComboboxItems(){
            //   var resData=await GeneralCodeComboboxItems(
            //     {
            //         Id: "DESZT"
            //     }
            // )
            // if(resData.statusCode==200){
            //     var result=resData.data.result;
            //     result=result.filter((data)=>{
            //         return data.value!=='W'
            //     })
            //     this.result=result
            //     this.$apply();
            // }
            let { data } = await GAuditCaseFileStampActions({id:this.submitData.id})
            this.result = data.result.items
            this.$apply()
        }
        onLoad(options) {
            this.submitData.id = options.id;
            // this.submitData.approveUser = this.$parent.global.userInfo.id;
            this.GetGeneralCodeComboboxItems();
            this.$apply();
        }
    }
</script>