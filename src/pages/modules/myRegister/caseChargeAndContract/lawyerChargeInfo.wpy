<!--  -->
<style lang='scss'>
    .container {
        .pageTitle {
            height: 104rpx;
            line-height: 104rpx;
            font-size: 48rpx;
            padding-left: 28rpx;
            border-bottom: 1px solid #dedede;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background: #fff;
            z-index: 99;
        }
        .auditContent {
            margin: 149rpx 28rpx 22rpx 28rpx;
            .flex-container {
                display: flex;
                justify-content: space-between;
                >view {
                    width: 45%;
                }
            }
        }
        .checked-box {
            margin: 10rpx 0 40rpx 0;
            display: flex;
            align-items: center;
            >view {
                flex: 1;
                width: 100%;
                display: flex;
                align-items: center;
            }
        }
        .checkedBox {
            // padding: 0 28rpx 22rpx 28rpx;
            margin-bottom: 36rpx;
            border-bottom: 1px solid #dedede;
            .checkbox-group {
                height: 106rpx;
                display: flex;
                align-items: center;
                justify-content: center;
                flex-wrap: nowrap;
                width: 100%;
                .label {
                    align-items: center;
                    flex: 1;
                    display: flex;
                    justify-content: center;
                }
            }
        }
        .uploadBox{
            padding-bottom: 140rpx;
            .upload{
                display: flex;
                justify-content: space-between;
                align-items: center;
                >.btn{
                    border-radius: 60rpx;
                    border:2rpx solid #5D73FA;
                    margin: 0;
                    padding: 0 40rpx;
                    color: #5D73FA;
                }
            }
            .doc{
                display: flex;
                margin-top: 15rpx;
            }
        }
        .addImage {
            width: 160rpx;
            height: 160rpx;
            position: fixed;
            bottom: 0;
            right: 0;
            z-index: 999999;
        }
    }
</style>

<template>
    <view class='container'>
        <view class="pageTitle">
            <text>律师费用信息</text>
        </view>
        <view class="auditContent">
            <PaidParty :options.sync="PaidParty" :index.sync='PaidPartyIndex' :twoWayTitle="PaidPartyIndex" />
            <view class="flex-container">
                <ChargeLimit :input.sync="ChargeLimit" :inputValue.sync='ChargeLimitValue' :twoWayTitle="ChargeLimitValue" />
                <Currency :options.sync="Currency" :index.sync='CurrencyIndex' :twoWayTitle="CurrencyIndex" />
            </view>
            <view class="flex-container">
                <ExchangeRate :options.sync="ExchangeRate" :index.sync='ExchangeRateIndex' :twoWayTitle="ExchangeRateIndex" />
                <ExchangeRateValue :input.sync="ExchangeRateValue" :inputValue.sync='ExchangeRateValueValue' :twoWayTitle="ExchangeRateValueValue" />
            </view>
            <view class="checked-box">
                <checkbox id="IsTarget" value="{{IsTargetChecked}}" checked="{{IsTargetChecked}}" @tap="IsTarget" color="#5d73fa" />{{IsTarget.title}}
            </view>
            <view class="flex-container" wx:if="{{IsTargetChecked}}">
                <TargetAmount :input.sync="TargetAmount" :inputValue.sync='TargetAmountValue' :twoWayTitle="TargetAmountValue" />
                <TargetProrate :input.sync="TargetProrate" :inputValue.sync='TargetProrateValue' :twoWayTitle="TargetProrateValue" />
            </view>
            <view class="flex-container">
                <CostLimit :input.sync="CostLimit" :inputValue.sync='CostLimitValue' :twoWayTitle="CostLimitValue" />
                <FreeHours :input.sync="FreeHours" :inputValue.sync='FreeHoursValue' :twoWayTitle="FreeHoursValue" />
            </view>
             <view class="checkedBox">
                <view class="title">
                    收费方式
                </view>
                <checkbox-group @change="checkboxChange" class="checkbox-group">
                    <label wx:for="{{PayStyle}}" wx:key="index" index="index" item="item " class="label">
                            <checkbox value="{{item.value}}" checked="{{item.isSelected}}" name="id"  color="#5d73fa"/> {{item.displayText}}
                        </label>
                </checkbox-group>
            </view>
            <view class="uploadBox">
                <view class="upload">
                    <text>项目合同文件</text>
                    <button class="btn" size="mini" @tap="upload"> 上传 </button>
                </view>
                <view class="doc" wx:if="{{docShow}}">
                    <view class="content-left">
                        <icon class="iconfont icon-wendang" style="font-size:100rpx;color:#ff9900;margin-right:30rpx;"></icon>
                    </view>
                    <view class="content-right">
                        <view class="content-left-right" style="width:100%;margin-bottom:22rpx">
                            <text style="margin-bottom:14rpx">{{CaseContractList[0].name}}</text>
                        </view>
                        <view style="display:flex;justify-content:space-between;align-items:center;width:100%;color:#7a7a7a">
                            <view>
                            <text>{{CaseContractList[0].creationTime}} <text>最新上传</text></text>
                            </view>
                            <view>
                            <text>共{{CaseContractList.length}}份文档</text>
                            </view>
                        </view>
                    </view>
                </view>
            </view>
        </view>
        <image src="{{isNextBtn?'../../../../images/next.png':'../../../../images/test.png'}}" mode="scaleToFill" lazy-load="true" class="addImage" @touchend="isNextPage" />
    </view>
</template>

<script>
    import wepy from 'wepy';
    import ajax from '@/utils/cofig/ajax.js'
    import PaidParty from '@/components/picker/option';
    import ChargeLimit from '@/components/picker/input';
    import Currency from '@/components/picker/option';
    import ExchangeRate from '@/components/picker/option';
    import ExchangeRateValue from '@/components/picker/input';
    import TargetAmount from '@/components/picker/input';
    import TargetProrate from '@/components/picker/input';
    import CostLimit from '@/components/picker/input';
    import FreeHours from '@/components/picker/input';
    export default class lawyerChargeInfo extends wepy.page {
        components = {
            PaidParty,
            ChargeLimit,
            Currency,
            ExchangeRate,
            ExchangeRateValue,
            TargetAmount,
            TargetProrate,
            CostLimit,
            FreeHours
        };
        data = {
            submitData: {},
            caseId: '',
            //案件项下的办案费用支出
            PaidParty: {
                title: '案件项下的办案费用支出',
                name: 'PaidParty',
                value: [''],
                displayText: ['请选择'],
                warning: false
            },
            PaidPartyIndex: 0,
            //办案费限额
            ChargeLimit: {
                title: '办案费限额',
                name: 'ChargeLimit',
                warning: false,
                type: 'text',
                options: false
            },
            ChargeLimitValue: '',
            //货币类型
            Currency: {
                title: '货币类型',
                name: 'Currency',
                value: [],
                displayText: [],
                warning: false
            },
            CurrencyIndex: 0,
            //约定汇率
            ExchangeRate: {
                title: '约定汇率',
                name: 'ExchangeRate',
                value: [],
                displayText: [],
                warning: false
            },
            ExchangeRateIndex: 0,
            //汇率
            ExchangeRateValue: {
                title: '汇率',
                name: 'ExchangeRateValue',
                warning: false,
                type: 'text',
                options: false
            },
            ExchangeRateValueValue: '',
            //使用标的
            IsTarget: {
                title: '使用标的',
                IsTarget: [],
            },
            IsTargetChecked: '',
            // 标的金额
            TargetAmount: {
                title: '标的金额',
                name: 'TargetAmount',
                warning: false,
                type: 'text',
                options: false
            },
            TargetAmountValue: '',
            // 标的比例
            TargetProrate: {
                title: '标的比例（%）',
                name: 'TargetProrate',
                warning: false,
                type: 'text',
                options: false
            },
            TargetProrateValue: '',
            // 律师费用
            CostLimit: {
                title: '律师费用',
                name: 'CostLimit',
                warning: false,
                type: 'text',
                options: false,
                isDisabled: true
            },
            CostLimitValue: '',
            // 免费小时
            FreeHours: {
                title: '免费小时',
                name: 'FreeHours',
                warning: false,
                type: 'text',
                options: false,
            },
            FreeHoursValue: '',
            //收费方式
            PayStyle: [],
            isNextBtn: false,
            CaseContractList:[],   //附件
            docShow:false   // 附件显示与否
        };
        methods = {
            isNextPage() {
                if (this.isNextBtn) {
                    wx.setStorage({
                        key: 'CREATE_LAWYERCHARGE_DATA',
                        data: this.submitData,
                        success: () => {
                            wx.navigateTo({
                                url: './chooseChargeMethod?id=' + this.caseId
                            });
                        }
                    });
                } else {
                    this.CreateOrUpdateCaseCharge();
                }
            },
            checkboxChange(e) {
                if (e.detail.value.length !== 0) {
                    var PayStyleValue = e.detail.value.sort();
                    this.submitData.PayStyle = PayStyleValue.join(',')
                    this.isNextBtn = true
                } else {
                    this.submitData.PayStyle=''
                    this.isNextBtn = false
                }
                this.$apply();
            },
            IsTarget() {
                this.IsTargetChecked = !this.IsTargetChecked;
                this.$apply();
            },
            upload(){ 
               wx.showActionSheet({
                itemList:['相册或相机拍照','本地文件'],
                success : re =>{
                    if(re.tapIndex === 0){
                        wx.chooseImage({
                            count: 1,
                            sizeType: ['original', 'compressed'],
                            sourceType: ['album', 'camera'],
                            success : res =>{
                                // tempFilePath可以作为img标签的src属性显示图片
                                const tempFilePaths = res.tempFilePaths
                                this.uploadFile(tempFilePaths[0],this.caseId)
                            }
                        })
                    }else{
                        wx.chooseMessageFile({
                            count: 1,
                            type: 'file',
                            success : res =>{
                                // tempFilePath可以作为img标签的src属性显示图片
                                const tempFilePaths = res.tempFilePaths
                                this.uploadFile(tempFilePaths[0],this.caseId)
                            }
                        })
                    }
                },
                fail (res) {
                    console.log(res.errMsg)
                }
                })
            }  
            
        };
        // 上传合同附件
        async uploadFile(file,caseid){
            wx.showLoading({
                title: '上传中', //提示的内容,
                mask: true, //显示透明蒙层，防止触摸穿透,
                success: res => {}
            });
             let resData = await ajax.uploadFile('/api/services/web/document/uploadCaseContract',
             file,
             {caseid},
             'file'
             )
             wx.hideLoading()
             if(resData.statusCode==200){
                wx.showToast({
                    title: '成功',
                    icon: 'success',
                    duration: 2000
                }) 
                this.GetCaseContractList()     
             }else{
                 wx.showToast({
                     title:result.error.message , //提示的内容,
                     icon: 'none', //图标,
                     duration: 2000, //延迟时间,
                     mask: false, //显示透明蒙层，防止触摸穿透,
                     success: res => {}
                 });
             }
            } 
        events = {};
        watch = {
            PaidPartyIndex(index) {
                this.submitData.PaidParty = this.PaidParty.value[index];
                this.$apply();
            },
            ChargeLimitValue(value) {
                this.submitData.ChargeLimit = value;
                this.$apply();
            },
            CurrencyIndex(index) {
                this.submitData.Currency = this.Currency.value[index];
                this.$apply();
            },
            ExchangeRateIndex(index) {
                this.submitData.ExchangeRate = this.ExchangeRate.value[index];
                this.$apply();
            },
            ExchangeRateValueValue(value) {
                this.submitData.ExchangeRateValue = value;
                this.$apply();
            },
            IsTargetChecked(checked) {
                if (checked) {
                    this.submitData.IsTarget = this.IsTarget.IsTarget[0].value;
                } else {
                    this.submitData.IsTarget = this.IsTarget.IsTarget[1].value;
                }
                this.$apply();
            },
            TargetAmountValue(value) {
                this.submitData.TargetAmount = value;
            },
            TargetProrateValue(value) {
                this.submitData.TargetProrate = value;
            },
            FreeHoursValue(value) {
                this.submitData.FreeHours = value;
            },
        };
        computed = {};
        async GetCaseChargeAndContractForEdit() {
            var resData = await ajax.getData(
                '/api/services/web/Case/GetCaseChargeForEdit',
                'post', {
                    Id: this.caseId
                }
            )
            if (resData.statusCode == 200) {
                // console.log(resData.data.result);
                var CaseChargeAndContractData = resData.data.result;
                //收费方式
                this.PayStyle = CaseChargeAndContractData.payStyleList;
                if (CaseChargeAndContractData.payStyle) {
                    this.isNextBtn = true;
                    this.submitData.PayStyle = CaseChargeAndContractData.payStyle;
                    var payStyle = CaseChargeAndContractData.payStyle.split(',')
                    for (var payStyle_index in payStyle) {
                        for (var PayStyle_index in this.PayStyle) {
                            if (payStyle[payStyle_index] == this.PayStyle[PayStyle_index].value) {
                                this.PayStyle[PayStyle_index].isSelected = true;
                            }
                        }
                    }
                }
                //案件项下的办案费支出由
                var PaidParty = this.cacheData(CaseChargeAndContractData.caWhoPayList)
                this.PaidParty.value = PaidParty.value;
                this.PaidParty.displayText = PaidParty.displayText;
                if (CaseChargeAndContractData.paidParty) {
                    for (var PaidParty_index in PaidParty.value) {
                        if (PaidParty.value[PaidParty_index] == CaseChargeAndContractData.paidParty) {
                            this.PaidPartyIndex = PaidParty_index;
                        }
                    }
                }
                //办案费限额
                this.ChargeLimitValue = CaseChargeAndContractData.chargeLimit;
                //货币类型
                var Currency = this.cacheData(CaseChargeAndContractData.currencyList)
                this.Currency.value = Currency.value;
                this.Currency.displayText = Currency.displayText;
                if (CaseChargeAndContractData.currency) {
                    for (var Currency_index in Currency.value) {
                        if (Currency.value[Currency_index] == CaseChargeAndContractData.currency) {
                            this.CurrencyIndex = Currency_index;
                        }
                    }
                }
                //约定汇率
                var ExchangeRate = this.cacheData(CaseChargeAndContractData.rateRoleList);
                this.ExchangeRate.value = ExchangeRate.value;
                this.ExchangeRate.displayText = ExchangeRate.displayText;
                if (CaseChargeAndContractData.exchangeRate) {
                    for (var exchangeRate_index in ExchangeRate.value) {
                        if (ExchangeRate.value[exchangeRate_index] == CaseChargeAndContractData.exchangeRate) {
                            this.ExchangeRateIndex = exchangeRate_index
                        }
                    }
                }
                //汇率
                this.ExchangeRateValueValue = CaseChargeAndContractData.exchangeRateValue;
                //是否标的
                this.IsTarget.IsTarget = CaseChargeAndContractData.whetherList;
                if (CaseChargeAndContractData.isTarget == 'Y') {
                    this.IsTargetChecked = true;
                } else {
                    this.IsTargetChecked = false;
                }
                //标的金额
                this.TargetAmountValue = CaseChargeAndContractData.targetAmount;
                //标的比例
                this.TargetProrateValue = CaseChargeAndContractData.TargetProrate;
                //律师费用
                this.CostLimitValue = CaseChargeAndContractData.costLimit;
                this.$apply();
                //免费小时
                this.FreeHoursValue = CaseChargeAndContractData.freeHours;
                this.$apply();
            }
        }
        //提交数据
        async CreateOrUpdateCaseCharge() {
            wx.showLoading({
                title: 'Loading...', //提示的内容,
                mask: true, //显示透明蒙层，防止触摸穿透,
                success: res => {
                }
            });
            var resData = await ajax.getData(
                '/api/services/web/case/CreateOrUpdateCaseCharge',
                'post',
                this.submitData
            )
            if (resData.statusCode == 200) {
                wx.setStorage({
                    key: 'CREATE_LAWYERCHARGE_DATA',
                    data: this.submitData,
                    success: () => {
                        wx.navigateBack({
                            delta: 1 //返回的页面数，如果 delta 大于现有页面数，则返回到首页,
                        });
                    }
                });
            }
        }
        cacheData(data) {
            var filterData = {
                value: [''],
                displayText: ['请选择']
            }
            for (var index = 0; index < data.length; index++) {
                filterData.value[index + 1] = data[index].value;
                filterData.displayText[index + 1] = data[index].displayText;
            }
            return filterData
        }
        async GetCaseContractList(){
            let { data } = await ajax.getData('/api/services/web/document/GetCaseContractList','post',{id:this.caseId}) 
            console.log(data.result )
           if( data.result.length > 0 ){
                 data.result[0].creationTime =  data.result[0].creationTime.split('T')[0];this.CaseContractList =  data.result;     
                 this.docShow = true;
           }
           this.$apply()
        }
        onLoad(options) {
            this.caseId = options.id;
            // this.caseId = '894A9A68-AA61-E911-AC1B-B0D9BF31DAD7'
            this.submitData = {
                    AllocStyle: "1",
                    Category: "",
                    ChargeLimit: "0",
                    CostLimit: "0",
                    Currency: "CNY",
                    ExchangeRate: "",
                    ExchangeRateValue: "0",
                    FreeHours: "0",
                    Id: options.id,
                    IsTarget: "Y",
                    LimitFee: "0",
                    LimitHour: "0",
                    PaidParty: "",
                    PayPeriod: "0",
                    PayStyle: "",
                    TargetAmount: "0",
                    TargetProrate: "",
                    allocstyle: "1",
                    hourlypay: "2",
                    normalcharge: "1",
                    payDetailHourly: "2",
                    payDetailQuota: "1",
                    payDetailRisk: "1",
                    rishCharge: "1"
                },
                this.GetCaseChargeAndContractForEdit()
        };

        onShow() {
            this.GetCaseContractList()
        };
    }
</script>