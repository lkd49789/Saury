<!--  -->
<style lang='scss'>
    .container {
        .pageTitle {
            height: 104rpx;
            line-height: 104rpx;
            font-size: 48rpx;
            padding-left: 28rpx;
            border-bottom: 1px solid #dedede;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background: #fff;
            z-index: 99;
        }
        .editArea {
            margin: 149rpx 28rpx 33rpx 28rpx;
            .tui-picker-content {
                margin-bottom: 36rpx;
                .tui-picker-detail {
                    display: flex;
                    padding: 28rpx 0;
                    align-items: center;
                    justify-content: space-between;
                    color: #7a7a7a;
                    min-height: 1.4rem;
                }
            }
            .checked-box {
                margin: 10rpx 0 40rpx 0;
                display: flex;
                align-items: center;
                >view {
                    flex: 1;
                    width: 100%;
                    display: flex;
                    align-items: center;
                }
            }
        }
        .subBtn{
            width: 160rpx;
            height: 160rpx;
            position: fixed;
            bottom: 0;
            right: 0;
            z-index: 999999;
        }
    }
</style>
<template>
    <view class='container'>
        <view class="pageTitle">
            {{pageStatus==1?'全风险':'基本加风险'}}
        </view>
        <view class="editArea">
            <RiskBasicAmount :input.sync="RiskBasicAmount" :inputValue.sync='RiskBasicAmountValue' :twoWayTitle="RiskBasicAmountValue" />
            <PayAmount :input.sync="PayAmount" :inputValue.sync='PayAmountValue' :twoWayTitle="PayAmountValue" />
            <Remark :input.sync="Remark" :inputValue.sync='RemarkValue' :twoWayTitle="RemarkValue" />
            <view>
                <view class="checked-box">
                    <checkbox id="UseBill" value="{{UseBillChecked}}" checked="{{UseBillChecked}}" @tap="isUseBill" color="#5d73fa" />{{UseBill.title}}
                </view>
                <view class="checked-box">
                    <checkbox id="IsAcceptable" value="{{IsAcceptableChecked}}" checked="{{IsAcceptableChecked}}" @tap="IsAcceptable" color="#5d73fa" />{{IsAcceptable.title}}
                </view>
            </view>     
        </view>
        <image src="{{'../../../../images/test.png'}}"  mode="scaleToFill" lazy-load="true" class="subBtn" @touchend="submitData" />
    </view>
</template>

<script>
    import wepy from 'wepy';
    import ajax from '../../../../utils/cofig/ajax.js';
    import RiskBasicAmount from '../../../../components/picker/input';
    import PayAmount from '../../../../components/picker/input';
    import Remark from '../../../../components/picker/input';
    export default class createRiskCharge extends wepy.page {
        components = {
            RiskBasicAmount,
            PayAmount,
            Remark
        };
        data = {
            //判断title
            pageStatus: 0,
            //风险收费
            subCaseRiskChargeData: {
                // CaseId: "1E584DE0-3166-E911-AC1B-B0D9BF31DAD7",
                // Id: "",
                // IsAcceptable: "Y",
                // PayAmount: "333333",
                // Remark: "儿我热无若",
                // RiskBasicAmount: "55555555555",
                // UseBill: "Y"
            },
            RiskBasicAmount: {
                title: '风险金额',
                name: 'RiskBasicAmount',
                warning: true,
                type: 'number',
            },
            RiskBasicAmountValue: '',
            PayAmount: {
                title: '基本金额',
                name: 'PayPeriod',
                warning: false,
                type: 'number',
            },
            PayAmountValue: '',
            Remark: {
                title: '风险达成条件',
                name: 'Remark',
                warning: false,
                options: true,
                type: 'text',
            },
            RemarkValue: '',
            //使用账单
            UseBill: {
                title: '使用账单',
                UseBill: [{
                        value: 'Y',
                        displayText: '是',
                        isSelected: false,
                    },
                    {
                        value: 'N',
                        displayText: '否',
                        isSelected: false,
                    },
                ],
            },
            UseBillChecked: '',
            //可收款
            IsAcceptable: {
                title: '可收款',
                IsAcceptable: [{
                        value: 'Y',
                        displayText: '是',
                        isSelected: false,
                    },
                    {
                        value: 'N',
                        displayText: '否',
                        isSelected: false,
                    },
                ],
            },
            IsAcceptableChecked: '',
        };
        methods = {
            submitData(){
                if(this.RiskBasicAmountValue){
                    this.CreateOrUpdateCaseRiskCharge();
                }else{
                    wx.showToast({
                      title: '请填写必填项！', //提示的内容,
                      icon: 'none', //图标,
                      duration: 2000, //延迟时间,
                      mask: false, //显示透明蒙层，防止触摸穿透,
                      success: res => {}
                    });
                }
                
            },
            isUseBill() {
                this.UseBillChecked = !this.UseBillChecked;
                this.$apply();
            },
            IsAcceptable() {
                this.IsAcceptableChecked = !this.IsAcceptableChecked;
                this.$apply();
            }
        };
        events = {};
        watch = {
            RiskBasicAmountValue(value) {
                this.subCaseRiskChargeData.RiskBasicAmount = value;
                this.$apply();
            },
            RemarkValue(value) {
                this.subCaseRiskChargeData.Remark = value;
                this.$apply();
            },
            PayAmountValue(value) {
                this.subCaseRiskChargeData.PayAmount = value;
                this.$apply();
            },
            UseBillChecked(checked) {
                if (checked) {
                    this.subCaseRiskChargeData.UseBill = this.UseBill.UseBill[0].value;
                } else {
                    this.subCaseRiskChargeData.UseBill = this.UseBill.UseBill[1].value;
                }
                this.$apply();
            },
            IsAcceptableChecked(checked) {
                if (checked) {
                    this.subCaseRiskChargeData.IsAcceptable = this.IsAcceptable.IsAcceptable[0].value;
                } else {
                    this.subCaseRiskChargeData.IsAcceptable = this.IsAcceptable.IsAcceptable[1].value;
                }
                this.$apply();
            }
        };
        async CreateOrUpdateCaseRiskCharge(){
            wx.showLoading({
              title: 'Loading...', //提示的内容,
              mask: true, //显示透明蒙层，防止触摸穿透,
              success: res => {
                  wx.navigateBack({
                    delta: 1 //返回的页面数，如果 delta 大于现有页面数，则返回到首页,
                  });
              }
            });
            var resData=await ajax.getData(
                '/api/services/web/casePayDetail/CreateOrUpdateCaseRiskCharge',
                'post',
                this.subCaseRiskChargeData
            )
            if(resData.statusCode==200){
                console.log('提交成功')
            }
        }
        //获取待编辑的数据
        GetPendingeEditData(chargeId){
            var riskChargeDataList= wx.getStorageSync('RISK_CHARGELIST_DATAS');
            var risklChargeData={};
            for(var index in riskChargeDataList){
                if(riskChargeDataList[index].id==chargeId){
                    risklChargeData=riskChargeDataList[index];
                }
            }
            if(Object.keys(risklChargeData).length!==0){
                this.RiskBasicAmountValue=risklChargeData.riskBasicAmount;
                this.subCaseRiskChargeData.id=risklChargeData.id;
                this.PayAmountValue=risklChargeData.payAmount;
                this.RemarkValue=risklChargeData.remark;
                if(risklChargeData.useBill=='Y'){
                     this.UseBillChecked=true;
                }else{
                    this.UseBillChecked=false;
                }
                if(risklChargeData.isAcceptable=='Y'){
                    this.IsAcceptableChecked=true;
                }else{
                    this.IsAcceptableChecked=false;
                }
            }
        }
        computed = {};
        onLoad(options) {
            this.subCaseRiskChargeData.CaseId=options.caseId;
            this.pageStatus = options.status;
            if (options.id) {
                this.GetPendingeEditData(options.id);
            } else {
                this.subCaseRiskChargeData.id='';
                this.UseBillChecked = false;
                this.IsAcceptableChecked = false;
            }
        };
        onShow() {};
    }
</script>

