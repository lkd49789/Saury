<!--  -->

<style lang='scss'>
    .container {
        .pageTitle {
            height: 104rpx;
            line-height: 104rpx;
            font-size: 48rpx;
            padding-left: 28rpx;
            border-bottom: 1px solid #dedede;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background: #fff;
            z-index: 99;
        }
        .editBox {
            margin: 149rpx 28rpx 20rpx 28rpx;
        }
        .addImage {
            width: 160rpx;
            height: 160rpx;
            position: fixed;
            bottom: 0;
            right: 0;
            z-index: 999999;
        }
    }
</style>

<template>
    <view class='container'>
        <view class="pageTitle">
            添加客户方本案联系人
        </view>
        <view class="editBox">
            <Name :input.sync="Name" :inputValue.sync='NameValue' :twoWayTitle="NameValue" />
            <ENName :input.sync="ENName" :inputValue.sync='ENNameValue' :twoWayTitle="ENNameValue" />
            <Sex :options.sync="Sex" :index.sync='SexIndex' :twoWayTitle="SexIndex" />
            <Duty :options.sync="Duty" :index.sync='DutyIndex' :twoWayTitle="DutyIndex" />
            <WorkPhone :input.sync="WorkPhone" :inputValue.sync='WorkPhoneValue' :twoWayTitle="WorkPhoneValue" />
            <Landline :input.sync="Landline" :inputValue.sync='LandlineValue' :twoWayTitle="LandlineValue" />
            <WorkEmail :input.sync="WorkEmail" :inputValue.sync='WorkEmailValue' :twoWayTitle="WorkEmailValue" />
            <Fax :input.sync="Fax" :inputValue.sync='FaxValue' :twoWayTitle="FaxValue" />
            <Company :input.sync="Company" :inputValue.sync='CompanyValue' :twoWayTitle="CompanyValue" />
            <Address :input.sync="Address" :inputValue.sync='AddressValue' :twoWayTitle="AddressValue" />
            <PersonDescription :input.sync="PersonDescription" :inputValue.sync='PersonDescriptionValue' :twoWayTitle="PersonDescriptionValue" />
        </view>
        <image src="{{'../../../../images/test.png'}}" mode="scaleToFill" lazy-load="true" class="addImage" style="opacity:{{addOpacity}} ;" @touchstart="touchStart" @touchend="touchEnd">
        </image>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import ajax from '@/utils/cofig/ajax.js';
    import Name from '@/components/picker/input';
    import ENName from '@/components/picker/input';
    import Duty from '@/components/picker/option';
    import Sex from '@/components/picker/option';
    import WorkPhone from '@/components/picker/input';
    import Landline from '@/components/picker/input';
    import WorkEmail from '@/components/picker/input';
    import Fax from '@/components/picker/input';
    import Company from '@/components/picker/input';
    import Address from '@/components/picker/input';
    import PersonDescription from '@/components/picker/input';
    export default class createClientLinker extends wepy.page {
        components = {
            Name,
            ENName,
            Sex,
            Duty,
            WorkPhone,
            Landline,
            WorkEmail,
            Fax,
            Company,
            Address,
            PersonDescription
        };
        data = {
            addOpacity: 1,
            clientLinkerCacheData: {},
            isClientCacheData:false,
            isPreIndex: 0,
            submitData: {
                // /api/services/web/clientContacts/CreateOrUpdateClientContactsBasic
                // Address: "地址"
                // CaseId: ""
                // ClientId: "CL20180300045"
                // Company: "公司"
                // Duty: "GM"
                // ENCompany: " "
                // ENName: "英文名"
                // Fax: "传真"
                // Id: ""
                // Landline: "座机"
                // Name: "姓名"
                // PersonDescription: "个人描述"
                // Post: ""
                // Region: ""
                // Sex: "M"
                // WorkEmail: "邮箱地址"
                // WorkPhone: "工作电话"
            },
            // 姓名
            Name: {
                title: '姓名',
                name: 'Name',
                warning: true,
                type: 'text',
                options: false
            },
            NameValue: '',
            // 英文名
            ENName: {
                title: '英文名',
                name: 'ENName',
                warning: false,
                type: 'text',
                options: false
            },
            ENNameValue: '',
            //性别
            Sex: {
                title: '性别',
                name: 'Sex',
                value: [""],
                displayText: ["请选择"],
                warning: false
            },
            SexIndex: 0,
            //职位
            Duty: {
                title: '职位',
                name: 'Duty',
                value: [""],
                displayText: ["请选择"],
                warning: false
            },
            DutyIndex: 0,
            //工作电话
            WorkPhone: {
                title: '工作电话',
                name: 'WorkPhone',
                warning: true,
                type: 'text',
                options: false
            },
            WorkPhoneValue: '',
            //座机
            Landline: {
                title: '座机',
                name: 'Landline',
                warning: false,
                type: 'text',
                options: false
            },
            LandlineValue: '',
            //邮箱地址
            WorkEmail: {
                title: '邮箱地址',
                name: 'WorkEmail',
                warning: true,
                type: 'text',
                options: false
            },
            WorkEmailValue: '',
            // 传真
            Fax: {
                title: '传真',
                name: 'Fax',
                warning: false,
                type: 'text',
                options: false
            },
            FaxValue: '',
            // 公司
            Company: {
                title: '公司',
                name: 'Company',
                warning: true,
                type: 'text',
                options: true
            },
            CompanyValue: '',
            // 地址
            Address: {
                title: '地址',
                name: 'Address',
                warning: false,
                type: 'text',
                options: true
            },
            AddressValue: '',
            // 个人描述
            PersonDescription: {
                title: '个人描述',
                name: 'PersonDescription',
                warning: false,
                type: 'text',
                options: true
            },
            PersonDescriptionValue: '',
        };
        methods = {
            touchStart() {
                this.addOpacity = 0.6;
                this.$apply();
            },
            touchEnd() {
                if (this.submitData.Name && this.submitData.WorkPhone && this.submitData.WorkEmail && this.submitData.Company) {
                    wx.showLoading({
                        title: 'Loading...', //提示的内容,
                        mask: true, //显示透明蒙层，防止触摸穿透,
                        success: res => {}
                    });
                    this.CreateOrUpdateClientContactsBasic();
                } else {
                    this.addOpacity = 1;
                    wx.showToast({
                        title: '请填写必填项！', //提示的内容,
                        icon: 'none', //图标,
                        duration: 2000, //延迟时间,
                        mask: false, //显示透明蒙层，防止触摸穿透,
                    });
                }
            }
        };
        events = {};
        watch = {
            NameValue(value) {
                this.submitData.Name = value;
                this.$apply();
            },
            ENNameValue(value) {
                this.submitData.ENName = value;
                this.$apply();
            },
            SexIndex(index) {
                this.submitData.Sex = this.Sex.value[index];
                this.$apply();
            },
            DutyIndex(index) {
                this.submitData.Duty = this.Duty.value[index];
                this.$apply();
            },
            WorkPhoneValue(value) {
                this.submitData.WorkPhone = value;
                this.$apply();
            },
            LandlineValue(value) {
                this.submitData.Landline = value;
                this.$apply();
            },
            WorkEmailValue(value) {
                this.submitData.WorkEmail = value;
                this.$apply();
            },
            FaxValue(value) {
                this.submitData.Fax = value;
                this.$apply();
            },
            CompanyValue(value) {
                this.submitData.Company = value;
                this.$apply();
            },
            AddressValue(value) {
                this.submitData.Address = value;
                this.$apply();
            },
            PersonDescriptionValue(value) {
                this.submitData.PersonDescription = value;
                this.$apply();
            },
        };
        computed = {};
        filterData(data) {
            var backData = {
                value: [''],
                displayText: ['请选择']
            }
            for (var index = 0; index < data.length; index++) {
                backData.value[index + 1] = data[index].value
                backData.displayText[index + 1] = data[index].displayText
            }
            return backData
        }
        //获取职位
        async GetClientContactsForEdit() {
            var resData = await ajax.getData(
                '/api/services/web/clientContacts/GetClientContactsForEdit',
                'post', {}
            )
            if (resData.statusCode == 200) {
                var GetClientContactsForEditData = resData.data.result;
                //性别
                var SexData = this.filterData(GetClientContactsForEditData.genderCombobox);
                this.Sex.value = SexData.value;
                this.Sex.displayText = SexData.displayText;
                if (this.isClientCacheData) {
                    if (this.clientLinkerCacheData.sex) {
                        for (var Sex_index in this.Sex.value) {
                            if (this.Sex.value[Sex_index] == this.clientLinkerCacheData.sex) {
                                this.SexIndex = Sex_index;
                            }
                        }
                    }
                }else{
                    this.SexIndex = 0;
                }
                //职位
                var DutyData = this.filterData(GetClientContactsForEditData.dutyCombobox);
                this.Duty.value = DutyData.value;
                this.Duty.displayText = DutyData.displayText;
                if (this.isClientCacheData) {
                    if (this.clientLinkerCacheData.duty) {
                        for (var Duty_index in this.Duty.value) {
                            if (this.Duty.value[Duty_index] == this.clientLinkerCacheData.duty) {
                                this.DutyIndex = Duty_index;
                            }
                        }
                    }
                }else{
                     this.DutyIndex = 0;
                }
               
            }
            this.$apply();
        }
        //提交数据
        async CreateOrUpdateClientContactsBasic() {
            var resData = await ajax.getData(
                '/api/services/web/clientContacts/CreateOrUpdateClientContactsBasic',
                'post',
                this.submitData
            )
            if (resData.statusCode == 200) {
                var clientlinkerdata = resData.data.result;
                var create_clientlinkerlist_data = wx.getStorageSync('CREATE_CLIENTLINKERLIST_DATA');
                if(this.isClientCacheData){
                     create_clientlinkerlist_data[this.isPreIndex]=clientlinkerdata;
                }else{
                    create_clientlinkerlist_data.push(clientlinkerdata);
                }
                var http =
                    '/api/services/web/clientContacts/GetClientContactAvatar?id=' + clientlinkerdata.id;
                    var linkerPhotoData = await ajax.getAavatar(http);
                clientlinkerdata.avatar = linkerPhotoData;
                wx.setStorage({
                    key: 'CREATE_CLIENTLINKERLIST_DATA',
                    data: create_clientlinkerlist_data,
                    success: () => {
                        wx.showToast({
                            title: '提交完成', //提示的内容,
                            icon: 'success', //图标,
                            duration: 2000, //延迟时间,
                            mask: true, //显示透明蒙层，防止触摸穿透,
                            success: res => {
                                this.addOpacity = 1;
                                wx.navigateBack({
                                    delta: 1 //返回的页面数，如果 delta 大于现有页面数，则返回到首页,
                                });
                            }
                        });
                    }
                });
            }
        }
        //获取客户信息
        async GetClient() {
            var resData = await ajax.getData(
                '/api/services/web/client/GetClient',
                'post', {
                    id: this.submitData.ClientId
                }
            )
            if (resData.statusCode == 200) {
                var clientData = resData.data.result;
                this.CompanyValue = clientData.name;
                this.AddressValue = clientData.address;
                this.$apply();
            }
        }
        //缓存中获取客户信息
        getCacheClientData(data) {
            console.log('====================================');
              console.log(data)
            console.log('====================================');
            this.submitData.ClientId=data.clientId;
            this.submitData.Id=data.id;
            this.NameValue = data.name;
            this.ENNameValue = data.enName;
            this.WorkPhoneValue=data.workPhone;
            this.LandlineValue=data.landline;
            this.WorkEmailValue=data.workEmail;
            this.FaxValue=data.fax;
            this.CompanyValue=data.company;
            this.AddressValue=data.address;
            this.PersonDescriptionValue=data.personDescription;
        }
        onLoad(options) {
            if (options.id) {
                this.submitData.ClientId = options.id;
                this.GetClient();
            }
            if (options.index) {
                var clientLinkerCacheData = wx.getStorageSync('CREATE_CLIENTLINKERLIST_DATA')[options.index];
                this.clientLinkerCacheData = clientLinkerCacheData;
                this.isClientCacheData=true;
                this.isPreIndex = +options.index;
                this.getCacheClientData(clientLinkerCacheData);
            }
            this.GetClientContactsForEdit();
        };
        onShow() {};
    }
</script>
