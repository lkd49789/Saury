<!--  -->
<style lang='less'>
  .container {
    margin: 44rpx 28rpx;
    .keyword-search {
      .search_top {
        display: flex;
        align-items: center;
        justify-content: space-between;
        .search_input {
          width: 100%; // border:1px solid #dfdfdf;
          padding: 10rpx 20rpx;
          border-radius: 100rpx;
          background: #f4f4f4;
          display: flex;
          align-items: center;
          margin-right: 14rpx;
          >icon {
            margin-right: 14rpx;
          }
          >input {
            width: 100%;
          }
        }
        .top_right_btn {
          // width: 15%;
          display: flex;
          align-items: center;
          justify-content: center;
        }
      }
      .search_history {
        margin-top: 28rpx;
        .history_title {
          display: flex;
          align-items: center;
          justify-content: space-between;
        }
        .history_content {
          margin-top: 10rpx;
          display: flex;
          align-items: center;
          flex-wrap: wrap;
          >view {
            background: #f4f4f4;
            padding: 10rpx 20rpx;
            border-radius: 50rpx;
            color: #7a7a7a;
            margin: 14rpx;
            position: relative;
            >icon {
              // animation: item_delet_icon 1s linear;
              position: absolute;
              top: -30rpx;
              right: -10rpx;
            }
          }
        }
      } // @keyframes item_delet_icon {
      //     from {
      //         opacity: 0;
      //     }
      //     to {
      //         opacity: 1;
      //     }
      // }
    }
    .advanced-search-input-panel {
      .advanced-search-title {
        display: flex;
        justify-content: space-between;
        align-items: baseline;
        >text {
          font-size: 40rpx;
        }
      }
      .advanced-search-content {
        margin: 30rpx 0;
      }
    }
    .tui-picker-content {
      margin-bottom: 36rpx;
      picker {
        padding: 20rpx 0;
        border-bottom: 1px solid #dfdfdf;
        .tui-picker-detail {
          display: flex;
          align-items: center;
          justify-content: space-between;
          color: #7a7a7a;
        }
      }
    }
    .btn-sub {
      width: 160rpx;
      height: 160rpx;
      position: fixed;
      bottom: 0;
      right: 0;
      z-index: 99;
    }
  }
</style>

<template>
  <view class='container'>
    <view class="keyword-search" wx:if="{{showPage}}" style="opacity:{{showPage?'1':'0'}}">
      <view class="search_top">
        <view class="search_input">
          <icon class="iconfont icon-sousuo1 input_sousuo" style="color:#5d73fa;font-size:24px;"></icon>
          <input value="{{searchClentValue}}" type="text" confirm-type="search" placeholder="搜索关键字" placeholder-class="placeholder" maxlength="30" bindconfirm="submitSearch" focus="true" wx:if="{{showPage}}"/>
        </view>
        <view class="top_right_btn">
          <icon class="iconfont icon-gaojisousuo" style="color:#5d73fa;font-size:35px;" catchtap="isShowPage"></icon>
        </view>
      </view>
      <view class="search_history">
        <view class="history_title">
          <text>历史搜索</text>
          <icon class="iconfont icon-shanchu2" style="color:#7a7a7a;font-size:35rpx;" catchtap="deletItemAll" wx:if="{{history_keyWord_case.length!==0}}"></icon>
        </view>
        <view class="history_content">
          <repeat for="{{history_keyWord_case}}" key="index" index="index" item="item">
            <view @tap="history('{{item}}')" bindlongpress="longTap('{{index}}')">
              <text>{{item}}</text>
              <icon class="iconfont icon-zirenwushanchu" style="color:#dfdfdf;font-size:30rpx;" wx:if="{{isShowArray[index]}}" catchtap="deletItem('{{index}}')"></icon>
            </view>
          </repeat>
        </view>
      </view>
    </view>
    <view class="advanced-search-input-panel" wx:else="{{showPage}}">
      <view class="advanced-search-title">
        <text>高级搜索</text>
        <icon class="iconfont icon-zirenwushanchu" style="color:#7a7a7a;font-size:40rpx;" catchtap="isShowPage"></icon>
      </view>
      <view class="advanced-search-content">
        <view class="tui-picker-content">
          <view>开始时间</view>
          <picker mode="date" value="{{startDate}}" start="2000-01-01" end="2050-12-31" bindchange="bindDateChangeStart">
            <view class="tui-picker-detail">
              {{startDate||'请选择'}}
              <icon class="updown iconfont icon-gengduoneirongdianjichakanxiangqing" style="font-size:30rpx;color:#b2b2b2"></icon>
            </view>
          </picker>
        </view>
        <view class="tui-picker-content">
          <view>结束时间</view>
          <picker mode="date" value="{{endDate}}" start="2000-01-01" end="2050-12-31" bindchange="bindDateChangeEnd">
            <view class="tui-picker-detail">
              {{endDate||'请选择'}}
              <icon class="updown iconfont icon-gengduoneirongdianjichakanxiangqing" style="font-size:30rpx;color:#b2b2b2"></icon>
            </view>
          </picker>
        </view>
        <lawyerName :input.sync="lawyerName" :inputValue.sync='lawyerNameValue' :twoWayTitle="lawyerNameValue" />
        <categoryList :options.sync="categoryList" :index.sync='categoryListIndex' :twoWayTitle="categoryListIndex" />
        <view class="tui-picker-content">
          <view>状态</view>
          <picker mode="multiSelector" bindchange="bindMultiPickerChangeCategory" bindcolumnchange="bindMultiPickerColumnChangeCategory" value="{{multiIndex}}" range="{{processStatusList}}">
            <view class="tui-picker-detail">
              {{processStatusListText||'请选择'}}
              <icon class="updown iconfont icon-gengduoneirongdianjichakanxiangqing" style="font-size:30rpx;color:#b2b2b2"></icon>
            </view>
          </picker>
        </view>
        <image class="btn-sub" src="../../../../images/test.png" mode="scaleToFill" lazy-load="false" catchtap="advancedSearchSubmit" />
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import {
    myDistinct,formatDate
  } from '@/utils/cofig/api.js';
  import { CaseCategoryComboboxItems } from '@/api/common.js';
  import { GCaseStatusComboboxItems } from '@/api/mycase.js';
  import lawyerName from '@/components/picker/input';
  import categoryList from '@/components/picker/option';
  export default class searchClient extends wepy.page {
    components = {
      lawyerName,
      categoryList,
    };
    data = {
      searchData: {},
      lawyerName: {
        title: '律师',
        name: 'lawyerName',
        warning: false,
        // type: 'digit',
      },
      lawyerNameValue: '',
      categoryList: {
        title: '类别',
        name: 'categoryList',
        value: [
        ],
        displayText: [
        ],
        warning: false
      },
      categoryListIndex: -1,
      processStatusListData: [],
      processStatusList: [],
      processStatusList1: [],
      processStatusListText: '',
      multiIndex: [0, 0],
      showPage: true,
      history_keyWord_case: [],
      searchClentValue: '',
      isShowArray: [],
      startDate: '',
      endDate: '',
    };
    methods = {
      bindMultiPickerChangeCategory(e) {
        var index = e.detail.value;
        var processStatusList=[];
        this.processStatusListText = this.processStatusList[0][index[0]] + '/' + this.processStatusList[1][index[1]];
        processStatusList[0] = this.processStatusListData[index[0]].items[index[1]].value;
        this.searchData.processStatusList=processStatusList
        this.$apply();
      },
      bindMultiPickerColumnChangeCategory(e) {
        console.log('修改的列为', e.detail.column, '，值为', e.detail.value);
        this.multiIndex[e.detail.column] = e.detail.value;
        switch (e.detail.column) {
          case 0:
            this.multiIndex[1] = 0;
            this.processStatusList[1] = this.processStatusList1[e.detail.value];
            this.$apply();
            break;
          default:
            break;
        }
        this.$apply();
      },
      bindDateChangeStart(e) {
        if (this.searchData.acceptDateRange) {
          this.searchData.acceptDateRange.startDate = e.detail.value;
        } else {
          var acceptDateRange = {};
          acceptDateRange.startDate = e.detail.value;
          this.searchData.acceptDateRange = acceptDateRange;
        }
        this.startDate = e.detail.value;
        this.$apply();
      },
      bindDateChangeEnd(e) {
        if (this.searchData.acceptDateRange) {
          this.searchData.acceptDateRange.endDate = e.detail.value;
        } else {
          var acceptDateRange = {};
          acceptDateRange.endDate = e.detail.value;
          this.searchData.acceptDateRange = acceptDateRange;
        }
        this.endDate = e.detail.value;
        this.$apply();
      },
      advancedSearchSubmit() {
        var pages = getCurrentPages();
        var prevPage = pages[pages.length - 2]; //上一个页面
        if (prevPage) {
          prevPage.isSearchData(this.searchData);
          wx.navigateBack({
            delta: 1 //返回的页面数，如果 delta 大于现有页面数，则返回到首页,
          });
        }
      },
      isShowPage() {
        this.showPage = !this.showPage;
        this.$apply();
      },
      deletItemAll() {
        wx.showModal({
          title: '确认是否删除！', //提示的标题,
          content: '全部历史记录', //提示的内容,
          showCancel: true, //是否显示取消按钮,
          cancelText: '取消', //取消按钮的文字，默认为取消，最多 4 个字符,
          cancelColor: '#7a7a7a', //取消按钮的文字颜色,
          confirmText: '确定', //确定按钮的文字，默认为取消，最多 4 个字符,
          confirmColor: '#5d73fa', //确定按钮的文字颜色,
          success: res => {
            if (res.confirm) {
              this.history_keyWord_case = [];
              var history = wx.getStorageSync('HISTORY_KEYWORD_CASE');
              history = [];
              wx.setStorageSync('HISTORY_KEYWORD_CASE', history);
              this.$apply();
            }
          }
        });
      },
      deletItem(index) {
        this.history_keyWord_case.splice(index, 1);
        var history = wx.getStorageSync('HISTORY_KEYWORD_CASE');
        history.splice(index, 1);
        wx.setStorageSync('HISTORY_KEYWORD_CASE', history);
      },
      longTap(index) {
        this.isShowArray = this.isShowArray.map(item => {
          item = false;
          return item
        })
        this.isShowArray[index] = true;
        this.$apply();
      },
      history(item) {
        this.searchClentValue = item;
        this.$apply();
      },
      submitSearch(e) {
        var value = e.detail.value.replace(/(^\s*)|(\s*$)/g, "");
        if (value) {
          this.searchData.filter=value;
          var pages = getCurrentPages();
          var prevPage = pages[pages.length - 2]; //上一个页面
          if (prevPage) {
            prevPage.isSearchData(this.searchData);
            wx.navigateBack({
              delta: 1, //返回的页面数，如果 delta 大于现有页面数，则返回到首页,
              success: () => {
                var History_KeyWord_Case = wx.getStorageSync('HISTORY_KEYWORD_CASE');
                if (History_KeyWord_Case.length >= 20) {
                  History_KeyWord_Case.splice(History_KeyWord_Case.length - 1, 1);
                }
                History_KeyWord_Case.unshift(value);
                History_KeyWord_Case = myDistinct(History_KeyWord_Case);
                wx.setStorageSync('HISTORY_KEYWORD_CASE', History_KeyWord_Case)
              }
            });
          }
          this.$apply();
        } else {
          wx.showToast({
            title: '搜索为空,请重试！', //提示的内容,
            icon: 'none', //图标,
            duration: 2000, //延迟时间,
            mask: true, //显示透明蒙层，防止触摸穿透,
            success: res => {}
          });
        }
      }
    };
    events = {};
    watch = {
      lawyerNameValue(value) {
        this.searchData.lawyerName = value;
        this.$apply();
      },
      categoryListIndex(index) {
        var categoryList=[];
        categoryList[0] = this.categoryList.value[index];
        this.searchData.categoryList=categoryList;
        this.$apply();
      }
    };
    async GetCaseCategoryComboboxItems() {
      var resData = await CaseCategoryComboboxItems()
      if (resData.statusCode == 200) {
        var GetCaseCategoryComboboxItems = resData.data.result;
        for (var index = 0; index < GetCaseCategoryComboboxItems.length; index++) {
          this.categoryList.displayText[index] = GetCaseCategoryComboboxItems[index].displayText;
          this.categoryList.value[index] = GetCaseCategoryComboboxItems[index].value;
        }
        this.$apply();
      }
    }
    async GetCaseStatusComboboxItems() {
      var resData = await GCaseStatusComboboxItems()
      if (resData.data.success) {
        var GetCaseStatusComboboxItems = resData.data.result;
        var arr1 = [];
        var arr2 = [];
        for (var i = 0; i < GetCaseStatusComboboxItems.length; i++) {
          arr1[i] = GetCaseStatusComboboxItems[i].displayText;
          var items = [];
          for (var j = 0; j < GetCaseStatusComboboxItems[i].items.length; j++) {
            items[j] = GetCaseStatusComboboxItems[i].items[j].displayText;
          }
          arr2[i] = items;
        }
        this.processStatusListData = GetCaseStatusComboboxItems;
        this.processStatusList[0] = arr1;
        this.processStatusList[1] = arr2[0];
        this.processStatusList1 = arr2;
        this.$apply();
      }
    }
    // 判断初始化历史数据
    isHistory() {
      var pages = getCurrentPages();
      var prevPage = pages[pages.length - 2]; //上一个页面
      prevPage.data.queryStream = {};
      prevPage.data.refresh = false;
      var History_KeyWord_Case = wx.getStorageSync('HISTORY_KEYWORD_CASE');
      if (!History_KeyWord_Case) {
        History_KeyWord_Case = [];
        wx.setStorageSync('HISTORY_KEYWORD_CASE', History_KeyWord_Case)
      } else {
        this.history_keyWord_case = History_KeyWord_Case;
        for (var index in this.history_keyWord_case) {
          this.isShowArray[index] = false;
        }
      }
      this.$apply();
    }
    onLoad() {
      this.GetCaseCategoryComboboxItems();
      this.GetCaseStatusComboboxItems();
      this.isHistory();
    };
    onShow() {};
  }
</script>

