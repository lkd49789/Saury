<!--  -->
<style lang='scss'>
    .container {
        .page-title {
            height: 104rpx;
            line-height: 104rpx;
            font-size: 48rpx;
            padding-left: 28rpx;
            border-bottom: 1px solid #dedede;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background: #fff;
            z-index: 999;
        }
        .main {
            margin: 149rpx 28rpx 44rpx 28rpx;
            .radio-group {
                .radio {
                    display: flex;
                    flex-direction: column;
                    .radio-item {
                        display: flex;
                        align-items: center;
                        flex: 1;
                        margin-bottom: 36rpx;
                    }
                }
            }
        }
        .subBtn {
            width: 160rpx;
            height: 160rpx;
            position: fixed;
            bottom: 0;
            right: 0;
            z-index: 9999;
        }
    }
</style>

<template>
    <view class='container'>
        <view class="page-title">
            案件冲突检索
        </view>
        <view class="main">
            <view class="radio-group">
                <radio-group class="radio-group" @change="radioChange">
                    <label class="radio" wx:for="{{caseCheckResultSource}}" wx:key="index" index="index" item="item">
                            <view  class="radio-item">
                                <radio value="{{item.value}}" checked="{{item.isSelected}}" color="#5d73fa"/> {{item.displayText}}
                            </view>
                        </label>
                </radio-group>
            </view>
            <remark :input.sync="remark" :inputValue.sync='remarkValue' :twoWayTitle="remarkValue" />
        </view>
        <image src="{{'../../../../images/test.png'}}" mode="scaleToFill" lazy-load="true" class="subBtn" @touchend="submitData" />
    </view>
</template>

<script>
    import wepy from 'wepy';
    import ajax from '../../../../utils/cofig/ajax.js';
    import remark from '../../../../components/picker/input';
    export default class subSearchResult extends wepy.page {
        components = {
            remark
        };
        data = {
            submitData: {},
            caseCheckResultSource: [{
                    value: "HasConflict",
                    displayText: "已经检索，有冲突",
                    isSelected: false
                },
                {
                    value: "NoConflict",
                    displayText: "已经检索，无冲突",
                    isSelected: false
                },
            ],
            remark: {
                title: '备注',
                name: 'remark',
                warning: false,
                type: 'text',
                options: true
            },
            remarkValue: ''
        };
        methods = {
            submitData() {
                if(this.submitData.result){
                    this.ProcessOrderItem();
                }else{
                    wx.showToast({
                      title: '请选择检索结果', //提示的内容,
                      icon: 'none', //图标,
                      duration: 2000, //延迟时间,
                      mask: false, //显示透明蒙层，防止触摸穿透,
                      success: res => {}
                    });
                }
            },
            radioChange(e) {
                this.submitData.result = e.detail.value;
                this.$apply();
            },
        };
        events = {};
        watch = {
            remarkValue(value) {
                this.submitData.remark = value;
                this.$apply();
            }
        };
        computed = {};
        async ProcessOrderItem() {
            let pages = getCurrentPages(); //获取当前页面信息栈
            let prevPage = pages[pages.length - 2] //获取上一个页面信息栈
            console.log(prevPage);
            wx.showLoading({
                title: 'Loading...', //提示的内容,
                mask: true, //显示透明蒙层，防止触摸穿透,
                success: res => {
                    wx.removeStorage({
                        key: 'CREATE_CONFLICTCHECK_DATA',
                        success: res => {
                            let pages = getCurrentPages(); //获取当前页面信息栈
                            if (prevPage.route == 'pages/modules/conflictRetrieval/conflictRetrievalAudit/searchResult') {
                                let prevPage_three = pages[pages.length - 4] //获取上一个页面信息栈
                                prevPage_two.isRefresh();
                                wx.navigateBack({
                                    delta: 3 //返回的页面数，如果 delta 大于现有页面数，则返回到首页,
                                });
                            } else {
                                let prevPage_two = pages[pages.length - 3] //获取上一个页面信息栈
                                prevPage_two.isRefresh();
                                wx.navigateBack({
                                    delta: 2 //返回的页面数，如果 delta 大于现有页面数，则返回到首页,
                                });
                            }
                        }
                    });
                }
            });
            var resData = await ajax.getData(
                '/api/services/web/caseCheck/ProcessOrderItem',
                'post',
                this.submitData
            )
            if (resData.statusCode == 200) {
                console.log('提交成功')
            } else {
                wx.showToast({
                    title: resData.data.error.message, //提示的内容,
                    icon: 'none', //图标,
                    duration: 2000, //延迟时间,
                    mask: true, //显示透明蒙层，防止触摸穿透,
                    success: res => {}
                });
            }
        }
        onLoad() {
            var Create_ConflictCheck_Data = wx.getStorageSync('CREATE_CONFLICTCHECK_DATA')
            for (let i = 0, len = Create_ConflictCheck_Data.conflictList.length; i < len; i++) {
                Create_ConflictCheck_Data.conflictList[i].searchName = Create_ConflictCheck_Data.conflictList[i].searchName.join(',');
                Create_ConflictCheck_Data.conflictList[i].searchEnName = Create_ConflictCheck_Data.conflictList[i].searchEnName.join(',');
            }
            this.submitData = Create_ConflictCheck_Data;
        };
        onShow() {};
    }
</script>
